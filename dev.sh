#!/bin/sh
# Usage: ./dev.sh
# Takes HTML and MD pages from _en.dev, assembles them together in _en.src, applies
# all _en.overwrite files, then publishes everything to en/
# Best paired with a live server watching the en/ directory

./build.sh 

cd en

# Finally, wrap all html files in _en.src/ in the header and footer and write the
# output to en/
for html_src in $(find ../_en.src -regex '.*/[^_][^/]+\.html'); do
    #page="$(basename "${html_src%%.html}")"
    html="$(echo $html_src | sed "s#../_en.src#.#g")"
    page="$(echo $html_src | sed -e "s#../_en.src/##g" -e "s#.html##g")"
    echo "$page"
    install -D /dev/null $html
    # TODO: Get from content source, but it must be in some translatable tag or attribute.
    # FIXME: When first adding a page, a placeholder page needs to be dropped in `en`
    # so that its title can be extracted here (it can just contain `<title>TITLE</title>`).
    title="$(sed -nE 's#.*<title>(.+)</title>.*#\1#p' "$html_src" | head -1)"
    
    tmp="$(mktemp)"
    echo '<!-- WARNING: Please do not edit this file directly, edit files in "en.dev" instead. -->' >> "$tmp"
    sed -e "s#@PAGE@#$page#g" -e "s#@TITLE@#$title#g" ../_en.src/_head.html >> "$tmp"
    cat "$html_src" >> "$tmp"
    sed -e "s#@PAGE@#$page#g" -e "s#@TITLE@#$title#g" ../_en.src/_tail.html >> "$tmp"
    echo '</body>' >> "$tmp"
    echo '</html>' >> "$tmp"
    sed -i "s#@LANG@#en#g" "$tmp" 
    mv "$tmp" "$html"
done
